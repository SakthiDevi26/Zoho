package customers.methods.customerview;

import java.sql.Connection;
import java.util.ArrayList;
import java.util.ListIterator;

import appconstants.ShoppingAppConstants;
import customers.methods.orders.driver.CustomerOrderDetailsDriver;
import customers.registeration.classes.driver.CustomerMainDriver;
import databaseoperations.classes.databasecheckoperations.CheckOrderId;
import databaseoperations.classes.databasegetoperations.GetDetailsFromDatabase;
import databaseoperations.classes.databasegetoperations.GetListDetailsFromDatabase;
import databaseoperations.classes.databasegetoperations.getDetailsFromDatabase.GetCustomerDetails;
import databaseoperations.classes.databasegetoperations.getlistfromdatabase.GetOrderIdList;
import databaseoperations.classes.databasegetoperations.getlistfromdatabase.GetProductIdList;
import sql.DatabaseConnection;
import utilities.GetDetails;


public class ViewMyOrders {
	public void viewMyOrders()
	{
		GetDetails getDetails = new GetDetails();
		GetOrderIdList getOrderIdList = new GetOrderIdList();
		GetCustomerDetails getCustomerDetails = new GetCustomerDetails();
		GetProductIdList getProductIdList = new GetProductIdList();
		CheckOrderId checkOrderId = new CheckOrderId();
		
		int customerId = getDetailsFromDb.getCurrentlyLoggedInCustomerId();
		ArrayList<Integer> orderIdList = new ArrayList<Integer>();
		orderIdList = getOrderIdList.getOrderIdList(customerId);
		if(!orderIdList.isEmpty())
		{
			System.out.println(ShoppingAppConstants.equalLine+"\n");
			System.out.println("\t\t\t\tMy ORDERS");
			System.out.println(ShoppingAppConstants.equalLine+"\n");
			System.out.printf("%30s %20s\n","Order Id",
					"Product Name");
			System.out.println("\t\t"+ShoppingAppConstants.underscoreLine);
	
			ListIterator<Integer> iterator = orderIdList.listIterator();
			while(iterator.hasNext())
			{
			int productId = getDetailsFromDb.getProductId(customerId,iterator.next());
			iterator.previous();
			String productName = getDetailsFromDb.getProductName(productId);
			System.out.printf("%30s %20s\n", iterator.next(),productName);
			}
			System.out.println("\n"+ShoppingAppConstants.equalLine);
			getDetails.getOrderId();
			if(getDetails.orderId!=0 && checkOrderId.isOrderIdInOrdersTable(getDetails.orderId))
			{
				CustomerOrderDetailsDriver orderDetailsDrive = new CustomerOrderDetailsDriver();
				orderDetailsDrive.customerOrderDetailsDriver(getDetails.orderId);
			}
			else if(getDetails.orderId==0)
			{
				CustomerMainDriver customerMainDrive = new CustomerMainDriver();
				customerMainDrive.customerMainDriver();
			}
			else
			{
				System.out.println(ShoppingAppConstants.invalidChoice);
				viewMyOrders();
			}
		
		}
	}
}
