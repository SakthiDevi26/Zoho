package view.orders;

import java.util.Scanner;

import appconstants.ShoppingAppConstants;
import databaseoperations.classes.databasegetoperations.getDetailsFromDatabase.GetCustomerDetails;
import databaseoperations.classes.databasegetoperations.getDetailsFromDatabase.GetOrderDetails;
import databaseoperations.classes.databasegetoperations.getDetailsFromDatabase.GetProductDetails;
import databaseoperations.classes.databasegetoperations.getDetailsFromDatabase.GetSupplierDetails;
import databaseoperations.classes.databasegetoperations.getEntities.GetProductEntityDetails;
import databaseoperations.interfaces.gettable.CustomerDetailsGettable;
import databaseoperations.interfaces.gettable.OrderDetailsGettable;
import databaseoperations.interfaces.gettable.ProductDetailsGettable;
import databaseoperations.interfaces.gettable.SupplierDetailsGettable;
import driver.customers.CustomerMainDriver;
import entities.Products;


public class ShowUndeliveredOrderDetails {

	/**
	 * 
	 * @param orderId
	 */
	public void showUndeliveredOrderDetails(int orderId) {
		
		// objects
		OrderDetailsGettable getOrderDetails = new GetOrderDetails();
		ProductDetailsGettable getProductDetails = new GetProductDetails();
		CustomerDetailsGettable getCustomerDetails = new GetCustomerDetails();
		SupplierDetailsGettable getSupplierDetails = new GetSupplierDetails();
		
		//order details
		String deliveryStatus = getOrderDetails.getDeliveryStatus(orderId);
		String deliveryDate = getOrderDetails.getDeliveryDate(orderId);
		
		//product details
		int productId = getProductDetails.getProductId(orderId,ShoppingAppConstants.shipmentTable,ShoppingAppConstants.orderIdColumn);
		GetProductEntityDetails getProduct = new GetProductEntityDetails();
		for(Products product : getProduct.getProductList(productId))
		{
			System.out.printf("%s", "product Name\n\n");
			System.out.printf("%s", product.productName);
			System.out.printf("\n%s",product.productCategory);
			System.out.printf("%40s %s","Total Price: ",product.productPrice);
		}
		
		//supplier details
		int supplierId = getSupplierDetails.getSupplierId(productId);
		String supplierName = getSupplierDetails.getSupplierName(supplierId);
		long supplierPhoneNumber = getSupplierDetails.getSupplierPhoneNumber(supplierId);
		
		//customer details
		int customerId = getCustomerDetails.getCustomerId(orderId);
		String customerName = getCustomerDetails.getCustomer(customerId,ShoppingAppConstants.customerUserNameColumn);
		String customerAddress = getCustomerDetails.getCustomer(customerId, ShoppingAppConstants.customerAddressColumn);
		long customerPhoneNumber = getCustomerDetails.getCustomerPhoneNumber(customerId);
		
		
		//print
		System.out.println(ShoppingAppConstants.greaterThanLine+"\n");
		System.out.println("\t\t\t\tORDER INFO\n");
		System.out.println(ShoppingAppConstants.lessThanLine+"\n");
		System.out.printf("%s", "orderId");
		System.out.printf("\n%d", orderId);
		System.out.print("\nOrder is "+deliveryStatus);
		System.out.printf("%32s %s","Delivery Date: " ,deliveryDate);
		System.out.println("\n"+ShoppingAppConstants.bigUnderscoreLine+"\n");
		System.out.printf("%50s %s","Contact supplier at: ",supplierPhoneNumber);
		System.out.println("\n"+ShoppingAppConstants.bigUnderscoreLine+"\n");
		System.out.println("Shipping Address\n");
		System.out.printf("%s", customerName);
		System.out.printf("\n%s", customerAddress);
		System.out.printf("\n%d", customerPhoneNumber);
		System.out.println("\n"+ShoppingAppConstants.bigUnderscoreLine+"\n");
		
		System.out.println(ShoppingAppConstants.goHome);
		Scanner scanner = new Scanner(System.in);
		int userInput = scanner.nextInt();

		if(userInput==0) {
			CustomerMainDriver customerMainDrive = new CustomerMainDriver();
			customerMainDrive.customerMainDriver();
		}
		else {
			System.out.println(ShoppingAppConstants.invalidChoice);
			showUndeliveredOrderDetails(orderId);
		}
	}

}
